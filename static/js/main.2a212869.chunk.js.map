{"version":3,"sources":["utils/index.js","components/common-handlers.js","components/Home/index.js","components/Ethereum/index.js","components/Login/handler.js","components/Login/index.js","components/Logout/index.js","components/Withdraw/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ABI","ERC20ABI","decrypt","token","accountString","CryptoJS","AES","process","REACT_APP_ENCRYPTION_KEY","toString","enc","Utf8","date","slice","lastIndexOf","Date","Number","Home","user","prynkAddress","ethAddress","blockchain","account","totalDeposits","withdrawable","toDateString","rel","target","href","connectProvider","setAddress","ethereum","window","alert","provider","ethers","providers","Web3Provider","request","method","then","acc","Ethereum","goerli","selectWithdrawalDate","prynkContractAddress","useState","address","amount","goal","symbol","saved","setSaved","setToken","setProvider","prynkContract","setPrynkContract","erc20Contract","setERC20Contract","useEffect","signer","getSigner","prynkI","Contract","mySavings","res","goalAmount","tokenSymbol","withdrawalDate","decimals","erc20I","prynkIt","e","a","result","approve","utils","parseEther","approval","wait","answer","prompt","startSaving","deposit","tx","console","log","savedAmount","savedGoal","saveMore","style","color","padding","onChange","value","name","map","t","onSubmit","disabled","type","toLocaleString","onClick","Withdraw","chain","tokenAddress","networkCall","callType","setUser","txs","preventDefault","fetch","REACT_APP_SERVER","userAccount","json","accountDeposits","accountWithdrawals","blockchainStatus","currentBlock","height","blocks","accountCreatedBlock","myTxs","filter","senderRS","accountRS","recipientRS","push","amountNQT","withTokenDeposits","attachment","message","length","index","block","oldestBlock","find","totalWithdrawals","reduce","curr","Login","prynkerTxs","placeholder","Logout","WithdrawFunds","withdraw","fee","axios","post","REACT_APP_PK","data","fullHash","handleWithdraw","dueDate","now","Ardor","ardor","transactions","Prynk","setTransactions","setBlockchain","REACT_APP_PRYNK_ADDRESS","text","month","day","year","getTime","isNaN","Math","floor","encrypt","prevState","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a212869.chunk.js","sourcesContent":["module.exports.ABI = [\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Save\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"withdrawnBy\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Withdraw\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOfERC20\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenBalance\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"tokenName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFee\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"fee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"tokenName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mySavings\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"saved\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"goalAmount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"tokenSymbol\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"withdrawalDate\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"decimals\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"withdrawable\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"register\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"saveMore\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setFee\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"goalAmount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"withdrawalDate\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"startSaving\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"withdraw\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"receive\"\r\n\t}\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports.ERC20ABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"subtractedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"decreaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"addedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"increaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"allowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"decimals\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint8\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","import CryptoJS from 'crypto-js'\r\n\r\nexport const decrypt = (token) => {\r\n  const bytes = CryptoJS.AES.decrypt(token, process.env.REACT_APP_ENCRYPTION_KEY)\r\n  const accountString = bytes.toString(CryptoJS.enc.Utf8)\r\n  const date = accountString.slice(accountString.lastIndexOf(':')+1)\r\n  return new Date(Number(date))\r\n}\r\n\r\nexport const encrypt = (text) => CryptoJS.AES.encrypt(`${text}`, process.env.REACT_APP_ENCRYPTION_KEY).toString()","import { Fragment } from 'react'\r\nimport { decrypt } from '../common-handlers'\r\n\r\nconst Home = ({ user, prynkAddress, ethAddress, blockchain }) => {\r\n  return blockchain === 'tArdor' ? (\r\n    <Fragment>\r\n      <div> Send your deposits<b>{prynkAddress}</b></div>\r\n      <div>\r\n        <small>Your account is: <b>{user.account}</b> </small>\r\n        { user && user.totalDeposits === 0 ? \r\n          <div>\r\n            <small>This is your goalToken: <b>{user.token}</b> make sure to add it to your first deposit</small>\r\n          </div>\r\n          : user && user.token  && user.withdrawable > 0 ? <div>\r\n              <small>You are saving until: {decrypt(user.token).toDateString()}</small>\r\n          </div> \r\n          : user && user.token && user.withdrawable <= 0 ? <div>\r\n            \r\n          </div> : null\r\n          \r\n        }       \r\n        { user.token && <small>Your withdrawable balance is <b>{user.withdrawable < 0 ? 0 : user.withdrawable / (10 ** 8)}</b> IGNIS</small> }\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <div>PRYNK's contract address: <b>{ethAddress}</b></div>\r\n      <small>Get free tokens: <a rel='noreferrer' target='_blank' href='https://rexdavinci.github.io/erc20-faucet-client'>faucet</a></small>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { ABI, ERC20ABI } from '../../utils'\r\nimport { WithdrawFunds } from '../index'\r\n\r\nconst Ethereum = ({ goerli }) => {\r\n    const { selectWithdrawalDate, user, prynkContractAddress } = goerli\r\n    const [address, setAddress] = useState('')\r\n    const [saved, setSaved] = useState({ amount: 0, goal: 0, symbol: '', withdrawable: 0 })\r\n    const [token, setToken] = useState('')\r\n\r\n    const [provider, setProvider] = useState(null)\r\n    const [prynkContract, setPrynkContract] = useState(null)\r\n    const [erc20Contract, setERC20Contract] = useState(null)\r\n    \r\n    useEffect(() => {\r\n      setProvider(connectProvider({setAddress}))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      // console.log(provider)\r\n      let signer\r\n      if(provider) {\r\n        signer = provider.getSigner(address)\r\n        const prynkI = new Contract(prynkContractAddress, ABI, signer);\r\n        if (prynkI) {\r\n          prynkI.mySavings(token).then(res => { \r\n            setSaved({ amount: Number(res.saved), goal: Number(res.goalAmount), symbol: res.tokenSymbol, withdrawable: Number(res.withdrawalDate * 1000), decimals: Number(res.decimals) })\r\n          })                         \r\n\r\n          setPrynkContract(prynkI)\r\n        }\r\n\r\n        const erc20I = new Contract(token, ERC20ABI, signer)\r\n        if(erc20I) {\r\n          setERC20Contract(erc20I)\r\n        }\r\n      }\r\n    }, [token]) // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n\r\n    const prynkIt = async(e) => {\r\n      // console.log(e.target.value)\r\n      let deposit\r\n\r\n      if(saved.amount === 0) {\r\n        if(!user.result.amount) {\r\n          alert('You must specify what your goal is')\r\n        }\r\n        const approval = await erc20Contract.approve(prynkContractAddress, ethers.utils.parseEther(user.result.amount))\r\n        await approval.wait()\r\n\r\n        const answer = prompt('How much are you depositing this time?')\r\n\r\n        if(answer && (answer < user.result.amount)) {\r\n          deposit = await prynkContract.startSaving(token, ethers.utils.parseEther(user.result.amount), ethers.utils.parseEther(answer), user.withdrawalDate)\r\n          const tx = await deposit.wait()\r\n          console.log(tx)\r\n        }\r\n      } else {\r\n        const answer = prompt('How much are you depositing this time?')\r\n     \r\n        const savedAmount = (saved.amount / (10 ** saved.decimals))\r\n        const savedGoal = (saved.goal / (10 ** saved.decimals))\r\n        const nextSavingsTotal = Number(answer) + savedAmount\r\n\r\n        if(nextSavingsTotal > savedGoal){\r\n          alert(`This goal only requires an additional ${savedGoal - savedAmount}`)\r\n        }\r\n\r\n          deposit = await prynkContract.saveMore(token, ethers.utils.parseEther(answer))\r\n          const tx = await deposit.wait()\r\n          console.log(tx)\r\n      }\r\n    } \r\n\r\n    const handleTokenChange = (e) => {\r\n      if(e.target.value !== '0x') {\r\n        setToken(e.target.value)\r\n      }\r\n    }\r\n\r\n    const supportedTokens = [\r\n      {\r\n        name: 'Select',\r\n        symbol: '',\r\n        address: '0x'\r\n      },\r\n      {\r\n        name: 'SMNT Token',\r\n        symbol: 'SMNT',\r\n        address: '0x0566300f84f410040ab9cf22b311a1261d494564'\r\n      }    \r\n    ]\r\n\r\n    return (\r\n      <Fragment>\r\n        <h3 style={{ color: 'red' }}>Use only testnet ETH (Goerli)</h3>\r\n        <div style={{ padding: '1rem' }}> <em><b>contribute to code: </b><a rel='noreferrer'  target='_blank' href='https://github.com/rexdavinci/Prynk_ARDOR'>prynk</a></em></div>\r\n        <p>Your address {address}</p>\r\n        <select onChange={handleTokenChange}>\r\n          {\r\n            supportedTokens.map(t => {\r\n              return(\r\n                <option key={t.symbol} value={t.address}>{t.name}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        \r\n        {\r\n          token ? \r\n          saved.amount === 0 ? <form onSubmit={(e) => selectWithdrawalDate(e, 'goerli')}>\r\n              <span>Amount: </span><input name='amount'/>\r\n              <span>day: </span><input name='day' />\r\n              <span>month: </span> <input name='month'/>\r\n              <span>year: </span> <input name='year'/>\r\n              <input disabled={user.withdrawalDate} type='submit' value='Set'/>\r\n            </form> : null : null\r\n        }\r\n        {\r\n         saved.amount > 0 && <div>\r\n            <p>You have currently saved {saved.amount / (10 ** saved.decimals)} {saved.symbol} of {saved.goal / (10 ** saved.decimals) } {saved.symbol} Withdrawable on {new Date(saved.withdrawable).toLocaleString()}  </p>\r\n          </div>\r\n        }\r\n        \r\n        {\r\n          user.result && <div>\r\n          {token ? <button onClick={prynkIt}>{saved.amount === 0 ? 'Start saving :D'  : 'Save More :)'}</button>: null}\r\n          </div>\r\n        }\r\n      <div>\r\n        <WithdrawFunds user={user} chain={{name: 'goerli', saved, prynkContract, tokenAddress: token}}/>\r\n      </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const connectProvider = ({ setAddress }) => {\r\n    const { ethereum } = window\r\n    if(!ethereum) {\r\n      alert('You need to install metamask or similar tools')\r\n    }\r\n    const provider = new ethers.providers.Web3Provider(ethereum)\r\n    ethereum.request({ method: 'eth_requestAccounts'}).then(acc => setAddress(acc[0]))\r\n    return provider;\r\n  }\r\n\r\n  export default Ethereum","export const networkCall = async (e, { callType, setUser, txs }) => {\r\n  e.preventDefault()\r\n  if (callType === 'getAccount') {\r\n    const account = e.target[0].value\r\n    let userAccount = await fetch(`${process.env.REACT_APP_SERVER}requestType=${callType}&account=${account}`)\r\n    userAccount = await userAccount.json()\r\n\r\n    const accountDeposits = []\r\n    const accountWithdrawals = []\r\n\r\n    const blockchainStatus = await fetch(`${process.env.REACT_APP_SERVER}requestType=getBlocks&lastIndex=1`)\r\n\r\n    const currentBlock = await blockchainStatus.json()\r\n    const { height } = currentBlock.blocks[0]\r\n    let accountCreatedBlock = height\r\n    const myTxs = txs.filter(tx => tx.senderRS === userAccount.accountRS || tx.recipientRS === userAccount.accountRS)\r\n    myTxs.map((t) => {\r\n      if(t.senderRS === userAccount.accountRS){\r\n        if(t.height < accountCreatedBlock){\r\n          accountCreatedBlock = t.height\r\n        }\r\n        accountDeposits.push(Number(t.amountNQT))\r\n      } else if(t.recipientRS === userAccount.accountRS){\r\n        accountWithdrawals.push(Number(t.amountNQT))\r\n      }\r\n      return true\r\n    })\r\n\r\n\r\n    let withTokenDeposits = myTxs.filter(t => t.senderRS === userAccount.accountRS)\r\n\r\n    \r\n    withTokenDeposits = withTokenDeposits.filter(t => {\r\n      if(!t.attachment.message) {\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n\r\n    let token = ''\r\n\r\n    if (withTokenDeposits.length === 1) {\r\n      token = withTokenDeposits[0].attachment.message\r\n    } else if(withTokenDeposits.length > 1){\r\n      const blocks = withTokenDeposits.map(t => t.block)\r\n      let oldestBlock = blocks[0]\r\n      for(let index in blocks) {\r\n        if(blocks[index] > oldestBlock) {\r\n          oldestBlock = blocks[index]\r\n        }\r\n      }\r\n\r\n      withTokenDeposits = withTokenDeposits.find(t => t.block === oldestBlock)\r\n      token = withTokenDeposits.attachment.message\r\n      console.log('too many goals submitted, going with the oldest submission...')\r\n    }\r\n\r\n    let totalDeposits = 0\r\n    let totalWithdrawals = 0\r\n    let withdrawable = 0\r\n    if (accountDeposits.length > 0) {\r\n      totalDeposits = accountDeposits.reduce((acc, curr) => acc + curr, 0)\r\n      totalWithdrawals = accountWithdrawals.reduce((acc, curr) => acc + curr, 0)\r\n      const fee = totalDeposits * 0.01 // 1% of deposits\r\n      withdrawable = totalDeposits - totalWithdrawals - fee\r\n    }\r\n    setUser({ token, myTxs, accountCreatedBlock, account: userAccount.accountRS, totalDeposits, totalWithdrawals, withdrawable })\r\n  }\r\n}\r\n","import { networkCall } from './handler'\r\n\r\nconst Login = ({ setUser, prynkerTxs }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => networkCall(e, { callType: 'getAccount', setUser, txs: prynkerTxs })}>\r\n        <input name='address' type='text' placeholder='ardor-address'/>\r\n        <input type='submit' value='Login'/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","const Logout = ({ setUser }) => {\r\n\r\n  const logout = () => setUser({})\r\n  return <div>\r\n    <button onClick={logout}>Logout</button>\r\n  </div>\r\n}\r\n\r\nexport default Logout","import axios from 'axios'\r\nimport { decrypt } from '../common-handlers'\r\n\r\nconst WithdrawFunds = ({ user, chain }) => {  \r\n\r\n  const withdraw = async({ fee }) => {\r\n    try {\r\n      const withdraw = await axios.post(\r\n        `${process.env.REACT_APP_SERVER}chain=2&requestType=sendMoney&recipient=${user.account}&amountNQT=${(user.withdrawable-fee)}&privateKey=${process.env.REACT_APP_PK}&feeNQT=${fee}&deadline=60`)\r\n      alert(`Transaction successful, tx: ${withdraw.data.fullHash}`)\r\n    } catch(e) {\r\n      alert('An error occurred, please try again later')\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleWithdraw = async () => {\r\n    if(chain.name === 'goerli') {\r\n\r\n      console.log(chain.tokenAddress)\r\n      try{\r\n      const withdraw = await chain.prynkContract.withdraw(chain.tokenAddress)\r\n        await withdraw.wait()\r\n      } catch(e) {\r\n        console.log(e.message)\r\n      }\r\n    }\r\n\r\n    if(chain.name === 'tArdor') {\r\n      const dueDate = decrypt(user.token)\r\n      const now = Date.now()\r\n      const fee = 0.025 * 10 ** 8\r\n      if(dueDate < now && user.withdrawable > 0){\r\n        if (user.withdrawable < fee) {\r\n          alert('Your balance is lower than the fee')\r\n          return null\r\n        }\r\n        await withdraw({ fee })\r\n      } else {\r\n        alert(`Your withdrawal target date is ${new Date(dueDate).toDateString()}. You can do it, just a little more patience`)\r\n      }\r\n    }\r\n  }\r\n\r\n  if(chain.name === 'goerli') {\r\n\r\n    return <div>\r\n      <p>Withdraw My Funds</p>\r\n      <button onClick={handleWithdraw}>Withdraw</button>\r\n    </div>\r\n  }\r\n\r\n  if(chain.name === 'tArdor') {\r\n  return user.withdrawable > 0 && (\r\n    <div>\r\n      <p>Withdraw My Funds</p>\r\n      <button onClick={handleWithdraw}>Withdraw</button>\r\n    </div>\r\n\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default WithdrawFunds\r\n","// import logo from './logo.svg';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { Home, Ethereum, Login, Logout, WithdrawFunds, encrypt } from './components'\n\nconst Prynk = () => {\n  const [user, setUser] = useState({})\n  const [transactions, setTransactions] = useState([])\n  const [blockchain, setBlockchain] = useState('tArdor')\n  const prynkContractAddress = '0xA7c2667b7A1067DDAca4487f0BA6Aa0d647CA387'\n  useEffect(() => {\n    (async () => {\n      let txs = await fetch(`${process.env.REACT_APP_SERVER}requestType=getBlockchainTransactions&chain=2&account=${process.env.REACT_APP_PRYNK_ADDRESS}`)\n      txs = await txs.json();\n      setTransactions(txs.transactions)\n    })()\n  }, [user])\n\n  const selectWithdrawalDate = (e, chain) => {\n    e.preventDefault()\n    const target = [...e.target]\n    const result = {}\n    target.map(t => {\n      if(t.name){\n        return result[t.name] = t.value\n      }\n      return false\n    })\n\n    let text = `${result.month}/${result.day}/${result.year}`\n    text = new Date(text).getTime()\n    if(isNaN(text)) {\n      alert('Date is in wrong format')\n      return null\n    }\n\n    if(chain === 'goerli') {\n      setUser({ withdrawalDate: Math.floor(text/1000), result })\n    }\n    const token = encrypt(`${user.account}:${text}`)\n    setUser(prevState => ({ ...prevState, token }))\n  }\n\n\n  const selectNetwork = (e) => {\n    setBlockchain(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        Chain: <select onChange={selectNetwork}>\n          <option value ='tArdor'> Ardor (Testnet) </option>\n          <option value ='goerli'> Ethereum (Goerli Testnet)</option>\n        </select>\n      </div>\n      {\n        blockchain === 'tArdor' ? <Ardor ardor={ { user, setUser, transactions, selectWithdrawalDate } } /> : <Ethereum goerli={ { prynkContractAddress, user, setUser, selectWithdrawalDate } } />\n      }\n      <Home blockchain={blockchain} ethAddress={prynkContractAddress} prynkAddress={process.env.REACT_APP_PRYNK_ADDRESS} user={user} transactions={transactions}/>\n\n    </div>\n  )\n}\n\n\nconst Ardor = ({ ardor }) => {\n  const { user, setUser, transactions, selectWithdrawalDate } = ardor\n    return (\n      <Fragment>\n        <h3 style={{ color: 'red' }}>Use only testnet IGNIS</h3>\n          <div style={{ padding: '1rem' }}> <em><b>contribute to code: </b><a rel='noreferrer'  target='_blank' href='https://github.com/rexdavinci/Prynk_ARDOR'>prynk</a></em></div>\n          <div>\n            {\n              !user.account ? <Login setUser={setUser} prynkerTxs={transactions}/> : null\n            }\n          </div>\n          {\n            (user && user.account && !user.token) ? <div>\n            <p>When do you wish to withdraw your funds?</p>\n            <form onSubmit={(e) => selectWithdrawalDate(e, 'ardor')}>\n              <span>day: </span><input name='day' />\n              <span>month: </span> <input name='month'/>\n              <span>year: </span> <input name='year'/>\n              <input type='submit' value='Set'/>\n            </form>\n          </div> : null\n        }\n          \n        { (user && user.account) &&\n          <div>\n            <Logout setUser={setUser}/>\n          </div>\n        } \n         <div>\n        <WithdrawFunds user={user} chain={{ name: 'tAdror' }}/>\n        </div>\n      </Fragment>\n    )\n  }\n\n\n\n  \n\n  export default Prynk;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}